<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - flamingo</title>
        <link>https://f1aming007.github.io/posts/</link>
        <description>All Posts | flamingo</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>fxqi1221@gmail.com (flamingo)</managingEditor>
            <webMaster>fxqi1221@gmail.com (flamingo)</webMaster><lastBuildDate>Sat, 27 May 2023 10:18:12 &#43;0800</lastBuildDate><atom:link href="https://f1aming007.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Golang 命令行参数os.Args</title>
    <link>https://f1aming007.github.io/golang-args/</link>
    <pubDate>Sat, 27 May 2023 10:18:12 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/golang-args/</guid>
    <description><![CDATA[Golang 命令行参数os.Args 如何制作命令行应用 如何使用os.Args 获取命令行参数 使用的知识点 os包提供了用于处理操作系统的相关内容的函数/值]]></description>
</item>
<item>
    <title>Golang PortScan</title>
    <link>https://f1aming007.github.io/golang-portscan/</link>
    <pubDate>Fri, 26 May 2023 17:32:01 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/golang-portscan/</guid>
    <description><![CDATA[<p></p>
<h1 id="golang-tcp-端口扫描">Golang TCP 端口扫描</h1>]]></description>
</item>
<item>
    <title>K8s GVK_GVR</title>
    <link>https://f1aming007.github.io/k8s-gvk_gvr/</link>
    <pubDate>Fri, 26 May 2023 09:44:00 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/k8s-gvk_gvr/</guid>
    <description><![CDATA[<p></p>
<h1 id="k8s-gvkfvr">K8s-GVK&amp;FVR</h1>
<h2 id="gvk--gvr-介绍">GVK &amp; GVR 介绍</h2>
<ul>
<li>GVK —— group 、version、 kind</li>
<li>GVR —— group 、version 、resource</li>
</ul>]]></description>
</item>
<item>
    <title>K8s Liveness_Readines</title>
    <link>https://f1aming007.github.io/k8s-liveness_readines/</link>
    <pubDate>Wed, 24 May 2023 16:28:31 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/k8s-liveness_readines/</guid>
    <description><![CDATA[<p></p>
<h1 id="livenessreadines">Liveness&amp;Readines</h1>
<h2 id="需求来源">需求来源</h2>
<ol>
<li>实时观察应用的健康状态</li>
<li>获取应用的资源使用情况</li>
<li>拿到应用的实时日志， 进行问题的诊断和分析</li>
</ol>]]></description>
</item>
<item>
    <title>Golang Etcd</title>
    <link>https://f1aming007.github.io/golang-etcd/</link>
    <pubDate>Tue, 23 May 2023 22:02:20 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/golang-etcd/</guid>
    <description><![CDATA[Etcd etcd 是一个开源的， 高可用的分布式的 key-value 存储系统， 可以用于配制共享和服务的注册和发现 etcd具有的特点 完全复制： 集群中的每个阶段都可以使用完整的]]></description>
</item>
<item>
    <title>Golang MangoDB</title>
    <link>https://f1aming007.github.io/golang-mongodb/</link>
    <pubDate>Tue, 23 May 2023 16:57:24 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/golang-mongodb/</guid>
    <description><![CDATA[MongoDB MongoDB介绍 mongoDB是基于分布式文件存储的数据库，是一个介于关系型数据库和非关系数据库之间的产品 mongoDB将一条数据存储为]]></description>
</item>
<item>
    <title>Golang Redis</title>
    <link>https://f1aming007.github.io/golang-redis/</link>
    <pubDate>Tue, 23 May 2023 16:16:11 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/golang-redis/</guid>
    <description><![CDATA[Redis Redis 介绍 Redis是一个开源的内存数据库，提供了多种不同的数据结构， 通过复制、持久化/客户端分片等特性， 方便的将Redis 拓展成一个包含数百]]></description>
</item>
<item>
    <title>Golang Sqlx</title>
    <link>https://f1aming007.github.io/golang-sqlx/</link>
    <pubDate>Tue, 23 May 2023 10:44:35 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/golang-sqlx/</guid>
    <description><![CDATA[sqlx 库的使用 sqlx 的介绍 sqlx 是内置database/sql 软件包的基础上提供了一组拓展 兼容sql原生包，提供了更加优雅的查询，插入函数 sqlx 安装 1 go get github.com/jmoiron/sqlx]]></description>
</item>
<item>
    <title>Golang Mysql CRUD</title>
    <link>https://f1aming007.github.io/golang-mysql-crud/</link>
    <pubDate>Sun, 21 May 2023 13:49:21 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/golang-mysql-crud/</guid>
    <description><![CDATA[Go 操作 sql server docker 安装 sqlserver 1 2 3 4 #拉取镜像 docker pull mcr.microsoft.com/azure-sql-edge #启动容器 docker run --name azuresqledge -e &#39;ACCEPT_EULA=Y&#39; -e &#39;SA_PASSWORD=yourStrong(!)Password&#39; -d -p 1433:1433 mcr.microsoft.com/azure-sql-edge 连接SQL数据库，要加载目标数据库的驱动，驱动里面包含了与数据库]]></description>
</item>
<item>
    <title>Docker Command</title>
    <link>https://f1aming007.github.io/docker-command/</link>
    <pubDate>Sun, 21 May 2023 11:39:44 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/docker-command/</guid>
    <description><![CDATA[docker常用命令整理 docker images docker image pull ：下载镜像 docker image ls：列出本地存储的镜像,参数 &ndash;digests查看镜像的SHA26签名 docker image ins]]></description>
</item>
</channel>
</rss>
