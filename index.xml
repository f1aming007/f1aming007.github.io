<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>flamingo</title>
        <link>https://f1aming007.github.io/</link>
        <description>flamingo Hugo</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>fxqi1221@gmail.com (flamingo)</managingEditor>
            <webMaster>fxqi1221@gmail.com (flamingo)</webMaster><lastBuildDate>Sun, 21 May 2023 13:49:21 &#43;0800</lastBuildDate>
            <atom:link href="https://f1aming007.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Golang Mysql CRUD</title>
    <link>https://f1aming007.github.io/golang-mysql-crud/</link>
    <pubDate>Sun, 21 May 2023 13:49:21 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/golang-mysql-crud/</guid>
    <description><![CDATA[Go 操作 sql server docker 安装 sqlserver 1 2 3 4 #拉取镜像 docker pull mcr.microsoft.com/azure-sql-edge #启动容器 docker run --name azuresqledge -e &#39;ACCEPT_EULA=Y&#39; -e &#39;SA_PASSWORD=yourStrong(!)Password&#39; -d -p 1433:1433 mcr.microsoft.com/azure-sql-edge 连接SQL数据库，要加载目标数据库的驱动，驱动里面包含了与数据库]]></description>
</item>
<item>
    <title>Docker Command</title>
    <link>https://f1aming007.github.io/docker-command/</link>
    <pubDate>Sun, 21 May 2023 11:39:44 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/docker-command/</guid>
    <description><![CDATA[docker常用命令整理 docker images docker image pull ：下载镜像 docker image ls：列出本地存储的镜像,参数 &ndash;digests查看镜像的SHA26签名 docker image ins]]></description>
</item>
<item>
    <title>Kubernets-Sc&amp;Pv&amp;Pvc</title>
    <link>https://f1aming007.github.io/sc-pv-pvc/</link>
    <pubDate>Sat, 20 May 2023 11:29:36 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/sc-pv-pvc/</guid>
    <description><![CDATA[Lighthouse (figure) PV、PVC、StorageClass Kubernetes 处理容器持久化存储的核心原理 PV： 持久化存储数据卷 pv 一般有运维人员事先创建之后使用， 定义一个NF]]></description>
</item>
<item>
    <title>Kubernets-Operator</title>
    <link>https://f1aming007.github.io/operator/</link>
    <pubDate>Sat, 20 May 2023 11:29:17 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/operator/</guid>
    <description><![CDATA[Operator 工作原理解读 operator的工作原理和编写方法 第一步，将这个 Operator 的代码 Clone 到本地： 1 git clone https://github.com/coreos/etcd-operator 第二步，将这个 Etcd Operator 部署在 Kubernetes 集群里 1 example/rbac/create_role.sh 这个脚本为 Etcd Operator]]></description>
</item>
<item>
    <title>Kubernets-Rbac</title>
    <link>https://f1aming007.github.io/rbac/</link>
    <pubDate>Sat, 20 May 2023 11:28:38 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/rbac/</guid>
    <description><![CDATA[基于角色的权限控制：RBAC 在kubernetes项目中 负责完成授权的（Authorization）工作的记住， 就是RBAC， 基于角色的访问]]></description>
</item>
<item>
    <title>Kubernets-声明式API</title>
    <link>https://f1aming007.github.io/%E5%A3%B0%E6%98%8E%E5%BC%8Fapi/</link>
    <pubDate>Sat, 20 May 2023 11:27:18 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/%E5%A3%B0%E6%98%8E%E5%BC%8Fapi/</guid>
    <description><![CDATA[声明式API与Kubernetes编码范式 kubectl create 再replace的操作， 称为命令式配置文件操作 声明式API https://hugbz2.51cg3.co/archives/25451 /https://hugbz2.51cg3.co/archives/4081/ kuberctl apply 命令就是 声明式API apply 与 re]]></description>
</item>
<item>
    <title>Kubernets-Job_Cronjob</title>
    <link>https://f1aming007.github.io/job_cronjob/</link>
    <pubDate>Sat, 20 May 2023 11:26:50 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/job_cronjob/</guid>
    <description><![CDATA[Job 与 CronJob Job API 1 2 3 4 5 6 7 8 9 10 11 12 13 apiVersion: batch/v1 kind: Job metadata: name: pi spec: template: spec: containers: - name: pi image: resouer/ubuntu-bc command: [&#34;sh&#34;, &#34;-c&#34;, &#34;echo &#39;scale=10000; 4*a(1)&#39; | bc -l &#34;] restartPolicy: Never backoffLimit: 4 计算π值的容器。而通过 scale=10000]]></description>
</item>
<item>
    <title>Kubernets-StatefulSet</title>
    <link>https://f1aming007.github.io/stateful/</link>
    <pubDate>Sat, 20 May 2023 11:26:22 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/stateful/</guid>
    <description><![CDATA[StatefulSet 概念 StatefulSet 的设计其实非常容器理解， 它把真实世界里的应用状态， 抽象为两个情况 拓扑状态：这种情况意味着， 应用的多个实例之间不是完全对等的关系， 这些]]></description>
</item>
<item>
    <title>Kubernets-DaemonSet</title>
    <link>https://f1aming007.github.io/daemonset/</link>
    <pubDate>Sat, 20 May 2023 11:25:48 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/daemonset/</guid>
    <description><![CDATA[DaemonSet 主要作用 在kubernetes集群里， 运行一个Daemon Pod， 所以， 这个Pod有如下三个特征 这个Pod运载kubernetes集群里的]]></description>
</item>
<item>
    <title>Kubernets-Deployment</title>
    <link>https://f1aming007.github.io/deployment/</link>
    <pubDate>Sat, 20 May 2023 11:16:48 &#43;0800</pubDate>
    <author>flamingo</author>
    <guid>https://f1aming007.github.io/deployment/</guid>
    <description><![CDATA[Deployment Deployment Pod 的 “水平扩展、收缩” ReplicaSet 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 apiVersion: apps/v1 kind: ReplicaSet metadata: name: nginx-set labels: app: nginx spec: replicas: 3 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:1.7.9 一个Replic]]></description>
</item>
</channel>
</rss>
